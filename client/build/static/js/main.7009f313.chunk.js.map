{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/NavBar.js","actions/todoActions.js","components/AddTodoModal.js","components/UpdateTodoModal.js","components/TodoList.js","reducers/todoReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","RegisterModal","props","useState","open","setOpen","name","setName","email","setEmail","password","setPassword","setMsg","error","isAuthenticated","useEffect","NavLink","style","cursor","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","Alert","color","Form","onSubmit","e","preventDefault","register","FormGroup","Label","for","Input","placeholder","className","onChange","event","target","value","Button","prototypes","PropTypes","bool","isRequired","object","func","connect","state","dispatch","body","JSON","stringify","axios","post","then","response","data","catch","err","LoginModal","login","NavBar","logout","user","menu","setMenu","AuthLinks","NavItem","GuestLinks","Navbar","dark","expand","Container","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","setItemLoading","todos","addTodo","todo","date","Date","now","updateTodo","put","currentName","size","defaultValue","TodoList","this","getTodos","AddTodoModal","ListGroup","TransitionGroup","map","_id","CSSTransition","key","timeout","classNames","ListGroupItem","deleteTodo","Component","get","delete","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7009f313.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status, id },\r\n  };\r\n};\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS,\r\n  };\r\n};\r\n","export const GET_TODOS = \"GET_TODOS\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODOS\";\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\r\n\r\n// AUTH ACTIONS\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGOUT_SUCCESS,\r\n} from \"../actions/types\";\r\nimport { returnErrors, clearErrors } from \"./errorActions\";\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  // User loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get(\"/api/auth/user\", tokenConfig(getState))\r\n    .then((response) =>\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: response.data,\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\n// Register user\r\nexport const register = ({ name, email, password }) => (dispatch) => {\r\n  // Header\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  axios\r\n    .post(\"/api/users\", body, config)\r\n    .then((response) => {\r\n      dispatch(clearErrors());\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnErrors(\r\n          err.response.data.msg,\r\n          err.response.status,\r\n          \"REGISTER_FAIL\"\r\n        )\r\n      );\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\n// Login user\r\nexport const login = ({ email, password }) => (dispatch) => {\r\n  // Header\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios\r\n    .post(\"/api/auth\", body, config)\r\n    .then((response) => {\r\n      dispatch(clearErrors());\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnErrors(err.response.data.msg, err.response.status, \"LOGIN_FAIL\")\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\n// Get the token and set it in the header if available, setup de Content-Type\r\nexport const tokenConfig = (getState) => {\r\n  // Get token from localstorage\r\n  const token = getState().auth.token;\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  // If token, add to headers\r\n  if (token) {\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { register } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\n\r\nconst RegisterModal = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(null);\r\n\r\n  const { error, isAuthenticated } = props;\r\n  useEffect(() => {\r\n    if (error.id === \"REGISTER_FAIL\") setMsg(error.msg);\r\n    else setMsg(null);\r\n    // If registered success close modal\r\n    if (open && isAuthenticated) {\r\n      setOpen(!open);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <NavLink style={{ cursor: \"pointer\" }} onClick={() => setOpen(!open)}>\r\n      Register\r\n      <Modal\r\n        isOpen={open}\r\n        toggle={() => {\r\n          props.clearErrors();\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        <ModalHeader\r\n          toggle={() => {\r\n            props.clearErrors();\r\n            setOpen(!open);\r\n          }}\r\n        >\r\n          Register\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              props.register({\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n              });\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <Label for=\"name\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Full name\"\r\n                className=\"mb-3\"\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email address\"\r\n                className=\"mb-3\"\r\n                onChange={(event) => {\r\n                  setEmail(event.target.value);\r\n                }}\r\n              />\r\n              <Label for=\"password\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"mb-3\"\r\n                onChange={(event) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n              />\r\n              <Button type=\"submit\" color=\"dark\" className=\"mt-2 btn-block\">\r\n                Register\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nRegisterModal.prototypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  error: PropTypes.object.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, clearErrors })(\r\n  RegisterModal\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { login } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\n\r\nconst LoginModal = ({ error, isAuthenticated, login, clearErrors }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (error.id === \"LOGIN_FAIL\") setMsg(error.msg);\r\n    else setMsg(null);\r\n    // If registered success close modal\r\n    if (open && isAuthenticated) {\r\n      setOpen(!open);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <NavLink style={{ cursor: \"pointer\" }} onClick={() => setOpen(!open)}>\r\n      Login\r\n      <Modal\r\n        isOpen={open}\r\n        toggle={() => {\r\n          clearErrors();\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        <ModalHeader\r\n          toggle={() => {\r\n            clearErrors();\r\n            setOpen(!open);\r\n          }}\r\n        >\r\n          Login\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              login({\r\n                email: email,\r\n                password: password,\r\n              });\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email address\"\r\n                className=\"mb-3\"\r\n                onChange={(event) => {\r\n                  setEmail(event.target.value);\r\n                }}\r\n              />\r\n              <Label for=\"password\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"mb-3\"\r\n                onChange={(event) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n              />\r\n              <Button type=\"submit\" color=\"dark\" className=\"mt-2 btn-block\">\r\n                Login\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nLoginModal.prototypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  error: PropTypes.object.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearErrors, login })(LoginModal);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Container,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/authActions\";\r\n\r\nimport RegisterModal from \"../components/auth/RegisterModal\";\r\nimport LoginModal from \"../components/auth/LoginModal\";\r\n\r\nconst NavBar = ({ isAuthenticated, logout, user }) => {\r\n  const [menu, setMenu] = useState(false);\r\n\r\n  const AuthLinks = () => (\r\n    <>\r\n      <NavItem>\r\n        <span className=\"navbar-text mr-3\">\r\n          <strong>{`Welcome Mr. ${user ? user.name : \"\"}`}</strong>\r\n        </span>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink style={{ cursor: \"pointer\" }} onClick={() => logout()}>\r\n          Logout\r\n        </NavLink>\r\n      </NavItem>\r\n    </>\r\n  );\r\n\r\n  const GuestLinks = () => (\r\n    <>\r\n      <NavItem>\r\n        <LoginModal />\r\n      </NavItem>\r\n      <NavItem>\r\n        <RegisterModal />\r\n      </NavItem>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-4\">\r\n        <Container>\r\n          <NavbarBrand href=\"/\">Todos list</NavbarBrand>\r\n          <NavbarToggler onClick={() => setMenu(!menu)} />\r\n          <Collapse isOpen={menu} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              {isAuthenticated ? <AuthLinks /> : <GuestLinks />}\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavBar.prototypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavBar);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  ITEMS_LOADING,\r\n} from \"./types\";\r\nimport { tokenConfig } from \"./authActions\";\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\nexport const getTodos = () => (dispatch) => {\r\n  dispatch(setItemLoading());\r\n  axios\r\n    .get(\"/api/todos\")\r\n    .then((response) => {\r\n      dispatch({\r\n        type: GET_TODOS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((error) =>\r\n      dispatch(returnErrors(error.response.data, error.response.status))\r\n    );\r\n};\r\n\r\nexport const deleteTodo = (id) => (dispatch, getState) => {\r\n  dispatch(setItemLoading());\r\n  axios\r\n    .delete(`/api/todos/${id}`, tokenConfig(getState))\r\n    .then((response) =>\r\n      dispatch({\r\n        type: DELETE_TODO,\r\n        payload: id,\r\n      })\r\n    )\r\n    .catch((error) =>\r\n      dispatch(returnErrors(error.response.data, error.response.status))\r\n    );\r\n};\r\n\r\nexport const addTodo = (todo) => (dispatch, getState) => {\r\n  dispatch(setItemLoading());\r\n  axios\r\n    .post(\"/api/todos\", todo, tokenConfig(getState))\r\n    .then((response) =>\r\n      dispatch({\r\n        type: ADD_TODO,\r\n        payload: response.data,\r\n      })\r\n    )\r\n    .catch((error) =>\r\n      dispatch(returnErrors(error.response.data, error.response.status))\r\n    );\r\n};\r\n\r\nexport const updateTodo = (id, name) => (dispatch, getState) => {\r\n  dispatch(setItemLoading());\r\n  axios\r\n    .put(`/api/todos/${id}`, { name }, tokenConfig(getState))\r\n    .then((response) => {\r\n      dispatch({\r\n        type: UPDATE_TODO,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((error) =>\r\n      dispatch(returnErrors(error.response.data, error.response.status))\r\n    );\r\n};\r\n\r\nexport const setItemLoading = () => {\r\n  return {\r\n    type: ITEMS_LOADING,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../actions/todoActions\";\r\n\r\nconst TodoModal = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <Button color=\"dark\" className=\"mb-2\" onClick={() => setOpen(!open)}>\r\n        Add new todo\r\n      </Button>\r\n      <Modal isOpen={open} toggle={() => setOpen(!open)}>\r\n        <ModalHeader toggle={() => setOpen(!open)}>Add new todo</ModalHeader>\r\n        <ModalBody>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              props.addTodo({\r\n                name: name,\r\n                date: Date.now(),\r\n              });\r\n              setOpen(!open);\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <Label for=\"event.target.name\">New todo:</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Please add you todo here\"\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              <Button type=\"submit\" color=\"dark\" className=\"mt-2 btn-block\">\r\n                Add new todo\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addTodo })(TodoModal);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTodo } from \"../actions/todoActions\";\r\n\r\nconst UpdateTodoModal = ({ id, currentName, ...props }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  return (\r\n    <div className=\"d-inline\">\r\n      <Button\r\n        className=\"btn btn-secondary p-1 mx-1 d-inline\"\r\n        size=\"sm\"\r\n        onClick={() => setOpen(!open)}\r\n      >\r\n        &#9998;\r\n      </Button>\r\n      <Modal isOpen={open} toggle={() => setOpen(!open)}>\r\n        <ModalHeader toggle={() => setOpen(!open)}>Add new todo</ModalHeader>\r\n        <ModalBody>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              props.updateTodo(id, name);\r\n              setOpen(!open);\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <Label for=\"event.target.name\">Update todo:</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                defaultValue={currentName}\r\n                placeholder=\"Please change you todo here\"\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              <Button type=\"submit\" color=\"dark\" className=\"mt-2 btn-block\">\r\n                Update todo\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateTodo })(UpdateTodoModal);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTodos, deleteTodo } from \"../actions/todoActions\";\r\n\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport AddTodoModal from \"./AddTodoModal\";\r\nimport UpdateTodoModal from \"./UpdateTodoModal\";\r\n\r\nclass TodoList extends Component {\r\n  componentDidMount() {\r\n    this.props.getTodos();\r\n  }\r\n\r\n  render() {\r\n    const { todos } = this.props.todos;\r\n    const { isAuthenticated } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        {isAuthenticated ? (\r\n          <AddTodoModal />\r\n        ) : (\r\n          <h4 className=\"mb-3 ml-4\">Please login to modify todos</h4>\r\n        )}\r\n\r\n        <ListGroup>\r\n          <TransitionGroup className=\"todo-list\">\r\n            {todos.map(({ _id, name }) => (\r\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                <ListGroupItem>\r\n                  {isAuthenticated ? (\r\n                    <>\r\n                      <Button\r\n                        className=\"btn btn-danger\"\r\n                        size=\"sm\"\r\n                        onClick={() => this.props.deleteTodo(_id)}\r\n                      >\r\n                        &#10008;\r\n                      </Button>\r\n                      <UpdateTodoModal id={_id} currentName={name} />\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {name}\r\n                </ListGroupItem>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nTodoList.propTypes = {\r\n  getTodos: PropTypes.func.isRequired,\r\n  todos: PropTypes.object.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  deleteTodo,\r\n})(TodoList);\r\n","import {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  ITEMS_LOADING,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false,\r\n      };\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos].filter((todo) => todo._id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos],\r\n        loading: false,\r\n      };\r\n    case UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo._id === action.payload._id ? action.payload : todo\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n        id: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case REGISTER_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n  todos: todoReducer,\r\n  error: errorReducer,\r\n  auth: authReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\n// Put all middleweres in an array\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/authActions\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    store.dispatch(loadUser());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <NavBar />\r\n        <TodoList />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}