{"version":3,"sources":["reducers/todoReducer.js","reducers/index.js","actions/types.js","store.js","components/NavBar.js","actions/todoActions.js","components/AddTodoModal.js","components/UpdateTodoModal.js","components/TodoList.js","App.js","index.js"],"names":["initialState","todos","loading","combineReducers","state","action","type","payload","filter","todo","_id","map","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","NavBar","useState","menu","setMenu","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","setItemLoading","connect","addTodo","dispatch","axios","post","then","response","data","props","open","setOpen","name","setName","Button","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","e","preventDefault","date","Date","now","FormGroup","Label","for","Input","id","placeholder","onChange","event","target","value","updateTodo","put","currentName","size","defaultValue","TodoList","this","getTodos","AddTodoModal","ListGroup","TransitionGroup","CSSTransition","key","timeout","classNames","ListGroupItem","deleteTodo","Component","get","delete","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f105fcb6.chunk.js","sourcesContent":["import {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  ITEMS_LOADING,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false,\r\n      };\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos].filter((todo) => todo._id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos],\r\n        loading: false,\r\n      };\r\n    case UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo._id === action.payload._id ? action.payload : todo\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nexport default combineReducers({\r\n  todos: todoReducer,\r\n});\r\n","export const GET_TODOS = \"GET_TODOS\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODOS\";\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\n// Put all middleweres in an array\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nconst NavBar = () => {\r\n  const [menu, setMenu] = useState(false);\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-4\">\r\n        <Container>\r\n          <NavbarBrand href=\"/\">Todos list</NavbarBrand>\r\n          <NavbarToggler onClick={() => setMenu(!menu)} />\r\n          <Collapse isOpen={menu} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"http://aurasjobs.ro\">aurasjobs</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  ITEMS_LOADING,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getTodos = () => (dispatch) => {\r\n  dispatch(setItemLoading());\r\n  axios.get(\"/api/todos\").then((response) => {\r\n    dispatch({\r\n      type: GET_TODOS,\r\n      payload: response.data,\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteTodo = (id) => (dispatch) => {\r\n  dispatch(setItemLoading());\r\n  axios.delete(`/api/todos/${id}`).then((response) =>\r\n    dispatch({\r\n      type: DELETE_TODO,\r\n      payload: id,\r\n    })\r\n  );\r\n};\r\n\r\nexport const addTodo = (todo) => (dispatch) => {\r\n  dispatch(setItemLoading());\r\n  axios.post(\"/api/todos\", todo).then((response) =>\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      payload: response.data,\r\n    })\r\n  );\r\n};\r\n\r\nexport const updateTodo = (id, name) => (dispatch) => {\r\n  dispatch(setItemLoading());\r\n  axios.put(`/api/todos/${id}`, { name }).then((response) => {\r\n    dispatch({\r\n      type: UPDATE_TODO,\r\n      payload: response.data,\r\n    });\r\n  });\r\n};\r\n\r\nexport const setItemLoading = () => {\r\n  return {\r\n    type: ITEMS_LOADING,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../actions/todoActions\";\r\n\r\nconst TodoModal = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <Button color=\"dark\" className=\"mb-2\" onClick={() => setOpen(!open)}>\r\n        Add new todo\r\n      </Button>\r\n      <Modal isOpen={open} toggle={() => setOpen(!open)}>\r\n        <ModalHeader toggle={() => setOpen(!open)}>Add new todo</ModalHeader>\r\n        <ModalBody>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              props.addTodo({\r\n                name: name,\r\n                date: Date.now(),\r\n              });\r\n              setOpen(!open);\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <Label for=\"event.target.name\">New todo:</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Please add you todo here\"\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              <Button type=\"submit\" color=\"dark\" className=\"mt-2 btn-block\">\r\n                Add new todo\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addTodo })(TodoModal);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTodo } from \"../actions/todoActions\";\r\n\r\nconst UpdateTodoModal = ({ id, currentName, ...props }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  return (\r\n    <div className=\"d-inline\">\r\n      <Button\r\n        className=\"btn btn-secondary p-1 mx-1 d-inline\"\r\n        size=\"sm\"\r\n        onClick={() => setOpen(!open)}\r\n      >\r\n        &#9998;\r\n      </Button>\r\n      <Modal isOpen={open} toggle={() => setOpen(!open)}>\r\n        <ModalHeader toggle={() => setOpen(!open)}>Add new todo</ModalHeader>\r\n        <ModalBody>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              props.updateTodo(id, name);\r\n              setOpen(!open);\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <Label for=\"event.target.name\">Update todo:</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                defaultValue={currentName}\r\n                placeholder=\"Please change you todo here\"\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              <Button type=\"submit\" color=\"dark\" className=\"mt-2 btn-block\">\r\n                Update todo\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateTodo })(UpdateTodoModal);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTodos, deleteTodo } from \"../actions/todoActions\";\r\n\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport AddTodoModal from \"./AddTodoModal\";\r\nimport UpdateTodoModal from \"./UpdateTodoModal\";\r\n\r\nclass TodoList extends Component {\r\n  componentDidMount() {\r\n    this.props.getTodos();\r\n  }\r\n\r\n  render() {\r\n    const { todos } = this.props.todos;\r\n    return (\r\n      <Container>\r\n        <AddTodoModal />\r\n        <ListGroup>\r\n          <TransitionGroup className=\"todo-list\">\r\n            {todos.map(({ _id, name }) => (\r\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                <ListGroupItem>\r\n                  <Button\r\n                    className=\"btn btn-danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => this.props.deleteTodo(_id)}\r\n                  >\r\n                    &#10008;\r\n                  </Button>\r\n                  <UpdateTodoModal id={_id} currentName={name} />\r\n                  {name}\r\n                </ListGroupItem>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nTodoList.propTypes = {\r\n  getTodos: PropTypes.func.isRequired,\r\n  todos: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // named as the given name in the compose reducers 'index.js'\r\n  todos: state.todos,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  deleteTodo,\r\n})(TodoList);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <NavBar />\r\n        <TodoList />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}